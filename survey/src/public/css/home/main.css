@font-face {
  font-family: "IM_Hyemin-Regular";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2106@1.1/IM_Hyemin-Regular.woff2")
    format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "IM_Hyemin-Bold";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2106@1.1/IM_Hyemin-Bold.woff2")
    format("woff");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "paybooc-Bold";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-07@1.0/paybooc-Bold.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}

/*------------------------------상단메뉴바--------------------------------*/

#menu {
  display: grid;
  grid-template-columns: 1fr 6fr 1fr;
  margin-bottom: 2vh;
  border-bottom: 3px solid black;
}
#menu div {
  display: grid;
  justify-content: center;
  align-content: center;
}
.title {
  font-size: 4vw;
  padding: 50px 0;
  font-family: "IM_Hyemin-Bold";
}
.make_btn {
  padding: 15px 15px;
  display: grid;
  justify-self: center;
}
.make_btn:hover {
  cursor: pointer;
}

/*------------------------------인기순/최신순--------------------------------*/

#order {
  display: grid;
  width: 20vw;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 10px;
  padding: 0px 5px;
  margin: 2vh 0 2vh 1vw;
  align-items: center;
}

/*------------------------------문제 페이지--------------------------------*/

.question_list {
  width: 100%;
  height: 40vh;
  display: grid;
  grid-template-columns: 25% 25% 25%;
  grid-column-gap: 8%;
  padding-left: 8%;
  margin-top: 3%;
  margin-bottom: 3%;
}

.rlink {
  display: var(--rlink-display, inline-flex);
}

.rlink[href] {
  color: var(--rlink-color);
  text-decoration: var(--rlink-text-decoration, none);
}

.rlink:not([href]) {
  pointer-events: none;
}

.rbutton {
  background-color: var(--rbutton-background-color, transparent);
  padding: var(
    --rbutton-padding,
    var(--rbutton-padding-top, 0) var(--rbutton-padding-right, 0)
      var(--rbutton-padding-bottom, 0) var(--rbutton-padding-left, 0)
  );

  border-width: var(
    --rbutton-border-width,
    var(--rbutton-border-top-width, 0) var(--rbutton-border-right-width, 0)
      var(--rbutton-border-bottom-width, 0) var(--rbutton-border-left-width, 0)
  );
  border-style: var(--rbutton-border-style, solid);
  border-color: var(--rbutton-border-color, currentcolor);

  font-family: var(--rbutton-font-family, inherit);
  font-size: var(--rbutton-font-size, 1em);
  font-weight: var(--rbutton-font-weight, inherit);

  color: var(--rbutton-color, currentcolor);
  text-align: var(--rbutton-text-align, center);
  text-transform: var(--rbutton-text-transform, inherit);
  letter-spacing: var(--rbutton-letter-spacing, inherit);
  word-spacing: var(--rbutton-word-spacing, inherit);

  text-shadow: var(--rbutton-text-shadow, none);
  display: var(--rbutton-display, inline-flex);
}

/*
1. pointer-events: none removes the any mouse events, i.e hover that works by default
2. user-select: none removes text selection
*/

.ui-button:disabled {
  pointer-events: none;
  user-select: none;
  opacity: var(--rbutton-opacity-disabled, 0.5);
}

.ui-button:not(:disabled) {
  cursor: var(--uibutton-cursor, pointer);
}

@media (prefers-reduced-motion: no-preference) {
  .ha-transition {
    transition-property: var(--ha-transition-property);
    transition-duration: var(--ha-transition-duration);
    transition-timing-function: var(--ha-transition-timing-function);
    transition-delay: var(--ha-transition-delay);
    will-change: var(--ha-transition-property);
  }

  .ha-transition-pseudo::before,
  .ha-transition-pseudo::after {
    transition-property: var(--ha-transition-pseudo-property);
    transition-duration: var(--ha-transition-pseudo-duration);
    transition-timing-function: var(--ha-transition-pseudo-timing-function);
    transition-delay: var(--ha-transition-pseudo-delay);
    will-change: var(--ha-transition-pseudo-property);
  }
}

/*
=====
OUTLINED TEXT
=====
*/

/* 
basic
*/

.text-outlined {
  width: 100%;
  height: 100%;
  border: 2px solid lightgrey;
  --ui-text-outlined-weight: var(--text-outlined-weight, 2px);
  --ui-text-outlined-line-color: var(--text-outlined-line-color, currentcolor);

  display: var(--text-outlined-display, inline-flex);
  position: var(--text-outlined-position, relative);
  padding: var(--text-outlined-padding, 0.25rem);
  color: var(--text-outlined-color, currentcolor);
}

.text-outlined__label {
  width: 100%;
  height: 100%;
  display: var(--text-outlined-label-display, block);
  display: grid;
}
.info1 {
  display: grid;
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 1;
  grid-row-end: 4;
  font-family: "IM_Hyemin-Bold";
}

.question-title {
  width: 100%;
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 1;
  grid-row-end: 2;
  border-bottom: 2px solid gray;
}
.question1 {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 2;
  grid-row-end: 5;
}
.vs_line {
  grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 2;
  grid-row-end: 5;
  text-align: center;
  color: grey;
  font-weight: bolder;
}
.question2 {
  grid-column-start: 4;
  grid-column-end: 5;
  grid-row-start: 2;
  grid-row-end: 5;
}
.info1 div {
  display: grid;
  justify-items: center;
  align-items: center;
  font-size: 1vw;
}
.question-title {
  color: black;
}

.question1 {
  color: skyblue;
}

.question2 {
  color: greenyellow;
}

.info2 {
  grid-column-start: 1;
  grid-column-end: 5;
  grid-row-start: 4;
  grid-row-end: 5;
  border: 1px solid skyblue;
  border-radius: 15px;
  display: grid;
  justify-items: center;
  align-items: center;
  font-size: 1.2vw;
  color: black;
  font-family: "IM_Hyemin-Bold";
}

:is(.text-outlined, .text-outlined__label)::before,
:is(.text-outlined, .text-outlined__label)::after {
  content: "";
  background-color: var(--ui-text-outlined-line-color);
  position: absolute;
}

.text-outlined::before,
.text-outlined::after {
  width: 100%;
  height: var(--ui-text-outlined-weight);
  left: 0;
}

.text-outlined__label::before,
.text-outlined__label::after {
  width: var(--ui-text-outlined-weight);
  height: 100%;
  top: 0;
}

.text-outlined::before {
  top: 0;
}

.text-outlined::after {
  bottom: 0;
}

.text-outlined__label::before {
  left: 0;
}

.text-outlined__label::after {
  right: 0;
}

/* 
text-outlined extension

1. opacity hides hide the lines so that they display the same regardless of what the 
element is. But I only show the line for interactive elements, i.e the 
button and the a
*/

/* extention #1 */

:is(.text-outlined, .text-outlined__label)::before,
:is(.text-outlined, .text-outlined__label)::after {
  opacity: var(--text-outlined-line-opacity, 0);
}

:is(a[href], button:not(:disabled)):hover .text-outlined {
  --text-outlined-line-opacity: var(--text-outlined-line-opacity-hover, 1);
}

/* extention #2 */

.text-outlined {
  --default-ui-text-outlined-line-transition-property: transform, opacity;
  --default-ui-text-outlined-line-transition-duration: 0.2s, 0.15s;
  --default-ui-text-outlined-line-transition-timing-function: ease-out;
  --default-ui-text-outlined-line-transition-delay: 0s, 0.15s;

  overflow: hidden;
}

.text-outlined::before {
  --ha-transition-pseudo-property: var(
    --ui-text-outlined-top-line-transition-property,
    var(
      --text-outlined-top-line-transition-property,
      var(--default-ui-text-outlined-line-transition-property)
    )
  );
  --ha-transition-pseudo-duration: var(
    --ui-text-outlined-top-line-transition-duration,
    var(
      --text-outlined-top-line-transition-duration,
      var(--default-ui-text-outlined-line-transition-duration)
    )
  );
  --ha-transition-pseudo-timing-function: var(
    --ui-text-outlined-top-line-transition-timing-function,
    var(
      --text-outlined-top-line-transition-timing-function,
      var(--default-ui-text-outlined-line-transition-timing-function)
    )
  );
  --ha-transition-pseudo-delay: var(
    --ui-text-outlined-top-line-transition-delay,
    var(
      --text-outlined-top-line-transition-delay,
      var(--default-ui-text-outlined-line-transition-delay)
    )
  );

  transform: var(
    --ui-text-outlined-top-line-transform,
    var(--text-outlined-top-line-transform, translate3d(-105%, 0, 0))
  );
}

.text-outlined::after {
  --ha-transition-pseudo-property: var(
    --ui-text-outlined-bottom-line-transition-property,
    var(
      --text-outlined-bottom-line-transition-property,
      var(--default-ui-text-outlined-line-transition-property)
    )
  );
  --ha-transition-pseudo-duration: var(
    --ui-text-outlined-bottom-line-transition-duration,
    var(
      --text-outlined-bottom-line-transition-duration,
      var(--default-ui-text-outlined-line-transition-duration)
    )
  );
  --ha-transition-pseudo-timing-function: var(
    --ui-text-outlined-bottom-line-transition-timing-function,
    var(
      --text-outlined-bottom-line-transition-timing-function,
      var(--default-ui-text-outlined-line-transition-timing-function)
    )
  );
  --ha-transition-pseudo-delay: var(
    --ui-text-outlined-bottom-line-transition-delay,
    var(
      --text-outlined-bottom-line-transition-delay,
      var(--default-ui-text-outlined-line-transition-delay)
    )
  );

  transform: var(
    --ui-text-outlined-bottom-line-transform,
    var(--text-outlined-bottom-line-transform, translate3d(105%, 0, 0))
  );
}

.text-outlined__label::before {
  --ha-transition-pseudo-property: var(
    --ui-text-outlined-left-line-transition-property,
    var(
      --text-outlined-left-line-transition-property,
      var(--default-ui-text-outlined-line-transition-property)
    )
  );
  --ha-transition-pseudo-duration: var(
    --ui-text-outlined-left-line-transition-duration,
    var(
      --text-outlined-left-line-transition-duration,
      var(--default-ui-text-outlined-line-transition-duration)
    )
  );
  --ha-transition-pseudo-timing-function: var(
    --ui-text-outlined-left-line-transition-timing-function,
    var(
      --text-outlined-left-line-transition-timing-function,
      var(--default-ui-text-outlined-line-transition-timing-function)
    )
  );
  --ha-transition-pseudo-delay: var(
    --ui-text-outlined-left-line-transition-delay,
    var(
      --text-outlined-left-line-transition-delay,
      var(--default-ui-text-outlined-line-transition-delay)
    )
  );

  transform: var(
    --ui-text-outlined-left-line-transform,
    var(--text-outlined-left-line-transform, translate3d(0%, -100%, 0))
  );
}

.text-outlined__label::after {
  --ha-transition-pseudo-property: var(
    --ui-text-outlined-right-line-transition-property,
    var(
      --text-outlined-right-line-transition-property,
      var(--default-ui-text-outlined-line-transition-property)
    )
  );
  --ha-transition-pseudo-duration: var(
    --ui-text-outlined-right-line-transition-duration,
    var(
      --text-outlined-right-line-transition-duration,
      var(--default-ui-text-outlined-line-transition-duration)
    )
  );
  --ha-transition-pseudo-timing-function: var(
    --ui-text-outlined-right-line-transition-timing-function,
    var(
      --text-outlined-right-line-transition-timing-function,
      var(--default-ui-text-outlined-line-transition-timing-function)
    )
  );
  --ha-transition-pseudo-delay: var(
    --ui-text-outlined-right-line-transition-delay,
    var(
      --text-outlined-right-line-transition-delay,
      var(--default-ui-text-outlined-line-transition-delay)
    )
  );

  transform: var(
    --ui-text-outlined-right-line-transform,
    var(--text-outlined-right-line-transform, translate3d(0%, 100%, 0))
  );
}

:is(a[href], button:not(:disabled)):hover > .text-outlined {
  --ui-text-outlined-top-line-transform: var(
    --text-outlined-top-line-transform-hover,
    translate3d(0, 0, 0)
  );
  --ui-text-outlined-right-line-transform: var(
    --text-outlined-right-line-transform-hover,
    translate3d(0, 0, 0)
  );
  --ui-text-outlined-bottom-line-transform: var(
    --text-outlined-bottom-line-transform-hover,
    translate3d(0, 0, 0)
  );
  --ui-text-outlined-left-line-transform: var(
    --text-outlined-left-line-transform-hover,
    translate3d(0, 0, 0)
  );

  --ui-text-outlined-top-line-transition-property: var(
    --text-outlined-top-line-transition-property-hover
  );
  --ui-text-outlined-right-line-transition-property: var(
    --text-outlined-right-line-transition-property-hover
  );
  --ui-text-outlined-bottom-line-transition-property: var(
    --text-outlined-bottom-line-transition-property-hover
  );
  --ui-text-outlined-left-line-transition-property: var(
    --text-outlined-left-line-transition-property-hover
  );

  --ui-text-outlined-top-line-transition-duration: var(
    --text-outlined-top-line-transition-duration-hover,
    0.25s
  );
  --ui-text-outlined-right-line-transition-duration: var(
    --text-outlined-right-line-transition-duration-hover,
    0.25s
  );
  --ui-text-outlined-bottom-line-transition-duration: var(
    --text-outlined-bottom-line-transition-duration-hover,
    0.25s
  );
  --ui-text-outlined-left-line-transition-duration: var(
    --text-outlined-left-line-transition-duration-hover,
    0.25s
  );

  --ui-text-outlined-top-line-transition-timing-function: var(
    --text-outlined-top-line-transition-timing-function-hover
  );
  --ui-text-outlined-right-line-transition-timing-function: var(
    --text-outlined-right-line-transition-timing-function-hover
  );
  --ui-text-outlined-bottom-line-transition-timing-function: var(
    --text-outlined-bottom-line-transition-timing-function-hover
  );
  --ui-text-outlined-left-line-transition-timing-function: var(
    --text-outlined-left-line-transition-timing-function-hover
  );

  --ui-text-outlined-top-line-transition-delay: var(
    --text-outlined-top-line-transition-delay-hover,
    0s
  );
  --ui-text-outlined-right-line-transition-delay: var(
    --text-outlined-right-line-transition-delay-hover,
    0s
  );
  --ui-text-outlined-bottom-line-transition-delay: var(
    --text-outlined-bottom-line-transition-delay-hover,
    0s
  );
  --ui-text-outlined-left-line-transition-delay: var(
    --text-outlined-left-line-transition-delay-hover,
    0s
  );

  --ui-text-outlined-will-change: var(--text-outlined-will-change-hover);
}

/*
modifiers
*/

.text-outlined_v5 {
  /* width: 300px;
  height: 300px; */
  --text-outlined-top-line-transform: translate3d(-100%, 0, 0);
  --text-outlined-right-line-transform: translate3d(0, -100%, 0);
  --text-outlined-bottom-line-transform: translate3d(100%, 0, 0);
  --text-outlined-left-line-transform: translate3d(0, 100%, 0);

  --text-outlined-top-line-transform-hover: translate3d(0, 0, 0);
  --text-outlined-right-line-transform-hover: translate3d(0 0, 0);
  --text-outlined-bottom-line-transform-hover: translate3d(0, 0, 0);
  --text-outlined-left-line-transform-hover: translate3d(0, 0, 0);

  --text-outlined-top-line-transition-duration-hover: 0.25s;
  --text-outlined-right-line-transition-duration-hover: 0.25s;
  --text-outlined-bottom-line-transition-duration-hover: 0.25s;
  --text-outlined-left-line-transition-duration-hover: 0.25s;

  --text-outlined-top-line-transition-delay-hover: 0s;
  --text-outlined-right-line-transition-delay-hover: 0s;
  --text-outlined-bottom-line-transition-delay-hover: 0s;
  --text-outlined-left-line-transition-delay-hover: 0s;
}

/*
SETTINGS
*/

:root {
  --text-outlined-weight: 3px;
  --text-outlined-color: rgb(79, 167, 202);
  --text-outlined-line-color: rgb(79, 167, 202);
  --text-outlined-padding: 1rem 1.25rem;
  --text-underlined-line-height: 5px;
  --text-underlined-line-gap: 0.25rem;
  --text-underlined-line-color: rgb(79, 167, 202);
  --text-underlined-color: rgb(79, 167, 202);
  --text-flat-background-color: rgb(79, 167, 202);
  --text-flat-padding: 0.75rem;
  --text-flat-color: rgb(79, 167, 202);
}

/*
=====
DEMO
=====
*/

body {
  margin: 0;
}

.section {
  padding: 7.25rem 1rem 6.5rem;
  position: relative;
}

.section:nth-child(odd) {
  background-color: #f1f4fa;
}

.section__label {
  padding: 0.5rem 1.5rem;

  font-size: 1rem;
  color: #4e4848;
  letter-spacing: 0.075rem;
  font-weight: 700;
  font-variant-caps: small-caps;

  position: absolute;
  top: 0;
  left: 0;
}

.section:nth-child(odd) .section__label {
  background-color: #fff;
}

.section:nth-child(even) .section__label {
  background-color: #f1f4fa;
}

.section__group {
  margin: 0.25rem;
  font-weight: 700;
  text-transform: uppercase;
  text-align: center;
}

@media (min-width: 641px) {
  .section {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-gap: 1rem;
  }
}

.substack {
  width: 100%;
  height: 280px;
}

/*------------------------------더보기 버튼--------------------------------*/
.more_btn {
  width: 100%;
  text-align: center;
  margin-bottom: 20px;
}
.add_btn {
  width: 20%;
}
.add_btn:hover {
  background-color: rgb(226, 226, 226);
  color: #1e1f21;
}

.hvr-glow {
  display: inline-block;
  vertical-align: middle;
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-property: box-shadow;
  transition-property: box-shadow;
}
.hvr-glow:hover,
.hvr-glow:focus,
.hvr-glow:active {
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
}

/*------------------------------최하단 레이어--------------------------------*/

.item3 {
  display: grid;
  align-content: center;
  grid-template-columns: 3fr 1fr 1fr;
  grid-template-rows: 1fr 0.7fr;
  background-color: rgb(226, 226, 226);
  grid-column: 1/2;
}

.sub_item1 {
  grid-row: 1/2;
  grid-column: 1/2;
}

#gmail {
  grid-column: 2/3;
  grid-row: 3/4;
  cursor: pointer;
  margin-bottom: 3vh;
  margin-left: 10vw;
}
#copyright {
  grid-column: 3/4;
  grid-row: 3/4;
  position: relative;

  justify-items: center;
  margin-bottom: 3vh;
}

#small_title {
  padding: 2vh 0 0 3vw;
  cursor: none;
  width: fit-content;
  position: relative;
  color: #1e1f21;
  font-size: 3vw;
  font-family: "paybooc-Bold";
}
#small_title:hover {
  animation-name: focus-in-expand;
  animation-duration: 1s;
  animation-delay: 0.3s;
  animation-direction: alternate;
}

.focus-in-expand {
  animation: focus-in-expand 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@keyframes focus-in-expand {
  0% {
    letter-spacing: -0.5em;
    filter: blur(12px);
    opacity: 0;
  }
  100% {
    filter: blur(0px);
    opacity: 1;
  }
}
